{
  "settingsVersion": "1.8.03",
  "makeOfflineCompatible": false,
  "inlineAssets": true,
  "includePluginCSS": "",
  "includeSvelteCSS": true,
  "titleProperty": "title",
  "customHeadContentPath": "",
  "faviconPath": "",
  "documentWidth": "40em",
  "sidebarWidth": "20em",
  "minOutlineCollapse": 100,
  "startOutlineCollapsed": false,
  "allowFoldingHeadings": false,
  "allowFoldingLists": false,
  "allowResizingSidebars": true,
  "logLevel": "warning",
  "minifyHTML": true,
  "makeNamesWebStyle": false,
  "onlyExportModified": true,
  "deleteOldFiles": false,
  "addThemeToggle": false,
  "addOutline": true,
  "addFileNav": true,
  "addSearchBar": false,
  "addGraphView": false,
  "addTitle": true,
  "addRSSFeed": false,
  "siteURL": "",
  "authorName": "qytlix",
  "vaultTitle": "Fiction",
  "exportPreset": "documents",
  "openAfterExport": true,
  "graphAttractionForce": 1,
  "graphLinkLength": 10,
  "graphRepulsionForce": 150,
  "graphCentralForce": 3,
  "graphEdgePruning": 100,
  "graphMinNodeSize": 3,
  "graphMaxNodeSize": 7,
  "showDefaultTreeIcons": false,
  "emojiStyle": "Native",
  "defaultFileIcon": "lucide//file",
  "defaultFolderIcon": "lucide//folder",
  "defaultMediaIcon": "lucide//file-image",
  "exportPath": "/home/qytlix/文档/Obsidian/FictionExport",
  "filesToExport": [
    [
      "all"
    ]
  ],
  "headCodes": "<!--代码高亮-->\n<script src=\"https://unpkg.com/prismjs@1.29.0/prism.js\" defer></script>\n<!--图标-->\n<script src=\"https://unpkg.com/lucide@latest\"></script>\n<!--评论-->\n<link rel=\"stylesheet\"  href=\"https://unpkg.com/@waline/client@v3/dist/waline.css\" />\n<!-- Meta 图标 (可选) -->\n<link rel=\"stylesheet\" href=\"https://unpkg.com/@waline/client@v3/dist/waline-meta.css\" />\n<style>\n    body {\n        --font-ui-medium: 16px;\n    }\n    :root {\n        /* 字体大小 */\n        --waline-font-size: 16px;\n\n        /* 常规颜色 */\n        --waline-white: #fff;\n        --waline-light-grey: #999;\n        --waline-dark-grey: #666;\n\n        /* 主题色 */\n        --waline-theme-color: #27ae60;\n        --waline-active-color: #2ecc71;\n\n        /* 布局颜色 */\n        --waline-color: #444;\n        --waline-bg-color: var(--background-primary-alt);\n        --waline-bg-color-light: #f8f8f8;\n        --waline-bg-color-hover: #f0f0f0;\n        --waline-border-color: #ddd;\n        --waline-disable-bg-color: #f8f8f8;\n        --waline-disable-color: #bbb;\n        --waline-code-bg-color: #282c34;\n\n        /* 特殊颜色 */\n        --waline-bq-color: #f0f0f0;\n\n        /* 头像 */\n        --waline-avatar-size: 3.25rem;\n        --waline-m-avatar-size: calc(var(--waline-avatar-size) * 9 / 13);\n\n        /* 徽章 */\n        --waline-badge-color: #3498db;\n        --waline-badge-font-size: 0.775em;\n\n        /* 信息 */\n        --waline-info-bg-color: #f8f8f8;\n        --waline-info-color: #999;\n        --waline-info-font-size: 0.625em;\n\n        /* 渲染选择 */\n        --waline-border: 1px solid var(--waline-border-color);\n        --waline-avatar-radius: 50%;\n        --waline-box-shadow: none;\n    }\n\n    /* 根据用户设置 ↓ */\n    .waline-theme-dark {\n        /* 常规颜色 */\n        --waline-white: #000;\n        --waline-light-grey: #666;\n        --waline-dark-grey: #999;\n\n        /* 布局颜色 */\n        --waline-color: #888;\n        --waline-bg-color: var(--background-primary-alt);\n        --waline-bg-color-light: #272727;\n        --waline-border-color: #333;\n        --waline-disable-bg-color: #444;\n        --waline-disable-color: #272727;\n\n        /* 特殊颜色 */\n        --waline-bq-color: #272727;\n\n        /* 其他颜色 */\n        --waline-info-bg-color: #272727;\n        --waline-info-color: #666;\n    }\n\n    /* 去掉版权信息 */\n    .wl-power {\n        display: none;\n    }\n\n    /* 去掉用户名邮箱等信息 */\n    .wl-header {\n        /*display: none;*/\n    }\n\n    /* 调整文章反应样式 */\n    .wl-reaction {\n        margin-bottom: 1em;\n        text-align: left;\n        margin-left: 0.5em;\n    }\n\n    /* 文章反应标题边距 */\n    .wl-reaction-title {\n        margin: 20px auto;\n    }\n\n    .wl-reaction-list {\n        justify-content: left;\n    }\n\n    .document-container>.markdown-preview-view>.markdown-preview-sizer {\n        padding-bottom: 17px !important;\n    }\n\n    .wl-panel {\n        margin: 0;\n    }\n\n    #waline {\n        margin-top: 50px !important;\n        max-width: 800px;\n    }\n\n    /* 左侧和右侧面板展开图标 */\n    .clickable-icon.sidebar-collapse-icon {\n        width: 2em !important;\n        background-color: var(--background-secondary);\n    }\n\n    /* 链接图谱 */\n    .graph-view-placeholder {\n        width: 22%;\n        margin-left: 38px;\n    }\n\n    /* 目录和大纲展开图标 */\n    .tree-container .clickable-icon {\n        margin-left: 2px;\n        border-radius: 5px;\n        border: none;\n        box-shadow: none;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        margin-top: -3px;\n    }\n\n    /* 文章最大宽度 */\n    .document-container>.markdown-preview-view>.markdown-preview-sizer {\n        max-width: 100vw !important;\n    }\n\n    /* 文章标题居中 */\n    body.show-inline-title .page-title {\n        text-align: center;\n    }\n\n    input[type=\"text\"],\n    textarea {\n        font-size: 16px !important;\n    }\n\n    input[type=search] {\n         width: 85%;\n         border: 1px solid #888;\n         border-radius: 5px;\n         background-color:var(--background-primary);\n         color: var(--text-muted);\n    }\n\n    .tree-container .clickable-icon {\n        background-color: transparent;\n    }\n\n    body {\n        user-select: unset;\n    }\n\n    blockquote{\n        margin: 0;\n    }\n\n    #copyright {\n        text-align: center;\n        margin-top: 80px !important;\n    }\n\n    #copyright a {\n        color: #ee802f;\n        text-decoration: none;\n        font-size: 15px;\n        margin-left: 4px;\n    }\n\n    #copyright a img {\n        width: 14px;\n    }\n\n    .document-container>.markdown-preview-view>.markdown-preview-sizer pre{\n        overflow: auto;\n    }\n\n    .theme-light .document-container>.markdown-preview-view>.markdown-preview-sizer pre {\n        position: relative;\n        background-color: var(--background-primary-alt); /* #f6f6f6; */\n        border: 1px solid #eeecec;\n        border-radius: 5px;\n        padding: 10px;\n    }\n\n    .theme-dark .document-container>.markdown-preview-view>.markdown-preview-sizer pre {\n        position: relative;\n        background-color: var(--background-primary-alt); /* #262626; */\n        border: 1px solid #373838;\n        border-radius: 5px;\n        padding: 10px;\n    }\n\n    .markdown-rendered pre button.copy-code-button {\n        position: absolute;\n        top: 7px;\n        right: 7px;\n    }\n\n    .wl-header input {\n        font-size: 16px;\n    }\n\n    .wl-reaction-votes {\n        text-align: center;\n    }\n\n    html>body>.webpage-container>.document-container>.markdown-preview-view>.markdown-preview-sizer>div.page-meta {\n        text-align: center;\n        padding: 10px !important;\n    }\n\n    .waline-comment-count,\n    .waline-pageview-count,\n    .page-ctime {\n        margin-right: 35px;\n    }\n\n    .page-meta {\n        color: #888;\n    }\n\n    .page-meta svg {\n        width: 16px;\n        vertical-align: middle;\n    }\n\n    #qrcode {\n        position: relative;\n    }\n\n    #qr-zoom {\n        position: absolute;\n        width: 170px;\n        height: 200px;\n        z-index: 999;\n        display: none;\n        border: 1px solid #ccc;\n        background: #fff;\n    }\n\n    #qrcode:hover #qr-zoom {\n        display: inline-block;\n    }\n\n    #qr-zoom img {\n        margin-top: 10px;\n    }\n\n    #qr-zoom font {\n        margin-top: 4px;\n        display: inline-block;\n    }\n\n    @media (max-width: 768px) {\n        #qrcode {\n            display: none !important;\n        }\n    }\n\n    #scrollToTopBtn {\n        display: none;\n        position: fixed;\n        width: 46px;\n        height: 46px;\n        border: 1px solid #ddd;\n        border-radius: 5px;\n        background-color: var(--background-primary);\n        text-align: center;\n        bottom: 75px;\n        right: 306px;\n        opacity: 0.8;\n    }\n\n    #scrollToTopBtn:hover {\n        background-color: var(--background-primary-alt);\n    }\n\n    #scrollToTopBtn svg {\n        margin-top: 11px;\n        color: var(--text-normal);\n    }\n\n    #scrollToTopBtn.st-collapsed {\n        right: 30px;\n    }\n\n    @media (max-width: 768px) {\n        #scrollToTopBtn {\n            right: 12px;\n        }\n\n        #scrollToTopBtn.st-collapsed {\n            right: 12px;\n        }\n    }\n\n   .theme-dark #scrollToTopBtn {\n       border: 1px solid #999;\n   }\n  .markdown-rendered pre button.copy-code-button{\n      background-color: var(--background-primary);\n      padding: 3px 6px;\n      border: 1px solid #888;\n      border-radius: 5px;\n      opacity: 0.9;\n  }\n  .document-container.markdown-reading-view{\n      background-color: var(--background-primary);\n  }\n\n  table {\n    border: 1px solid var(--table-border-color);\n    border-radius: var(--size-2-3);\n    border-spacing: 0;\n  }\n  th, td {\n      padding: 10px;\n      border-right: 1px solid var(--table-border-color);\n      border-bottom: 1px solid var(--table-border-color);\n  }\n  th:last-child, td:last-child {\n      border-right: 0;\n  }\n\n  /* 兼容有thead的情况 */\n  tr:last-child:not(:only-child) th, tr:last-child td{\n      border-bottom: 0;\n  }\n  table > :only-child th{\n      border-bottom: 0;\n  }\n  /* 兼容有thead的情况 end */\n\n  .document-container>.markdown-preview-view{\n      margin: 0;\n      padding: var(--sidebar-margin);\n  }\n  .sidebar-content{\n    background-color: var(--background-primary-alt);\n  }\n  .nav-folder-title[data-count]::after {\n    content: attr(data-count);\n    font-size: calc(100% * 0.8);\n    margin-right: 12px;\n  }\n  .tree-container .tree-header {\n      width: 100%;\n  }\n  #total-files {\n    position: absolute;\n    right: 12px;\n    color: var(--nav-item-color);\n    font-size: calc(100% * .8);\n  }\n  .tree-container .collapse-icon {\n    display: flex;\n    align-items: center;\n  }\n  /* 附件下载 */\n  .internal-embed.file-embed {\n      cursor: pointer;\n  }\n  .sidebar-content{\n      padding-left: 0;\n      padding-right: 0;\n  }\n  .search-input-container {\n      padding-left: 10px;\n  }\n  .tree-container{\n      padding-left: 12px;\n      padding-right: 12px;\n  }\n  .graph-view-wrapper {\n      padding-left: 12px;\n      padding-right: 12px;\n  }\n  body .webpage-container .tree-container .tree-scroll-area, .tree-container .tree-header {\n      width: calc(100% - 12px);\n  }\n  .tree-container .clickable-icon svg {\n      width: 18px;\n  }\n  ul.dataview.list-view-ul li {\n      line-height: 180%;\n  }\n  #webpage-icon{\n      display: none;\n  }\n  .markdown-reading-view table {\n      margin-block-start: var(--p-spacing);\n      margin-block-end: var(--p-spacing);\n  }\n  li {\n    line-height: 180%;\n  }\n</style>\n<!------------------------------------------------->\n<script type=\"module\">\n    import { init } from 'https://unpkg.com/@waline/client@v3/dist/waline.js';\n    window.initWaline = (transferDocument) => {\n        transferDocument = transferDocument || document;\n        const path = location.pathname.replace(/index\\.html$/, '').replace(/\\/$/, '') || '/';\n        const waline = document.querySelector(\"#waline\");\n        const container = document.querySelector(\".markdown-preview-sizer\")\n        if (!waline) {\n            const waline = document.createElement(\"div\");\n            waline.id = \"waline\";\n            if(!SHOW_COMMENTS) waline.style.display = 'none';\n            container.appendChild(waline);\n        }\n        let pageMeta = document.querySelector('.page-meta');\n        if (!pageMeta) {\n            const pageTitleElement = document.querySelector('.page-title');\n            pageMeta = document.createElement('div');\n            pageMeta.className = \"page-meta\";\n            if(!SHOW_PAGE_HEADER) pageMeta.style.display = 'none';\n            const ctime = transferDocument.querySelector('meta[name=\"ctime\"]')?.getAttribute(\"content\") || '';\n            let pageMetaHTML = '<span title=\"创建时间\"><i data-lucide=\"clock\"></i> <span class=\"page-ctime\">' + timestampToTimeString(+ctime) + '</span></span> ';\n            if(SHOW_COMMENTS) pageMetaHTML += '<span title=\"评论量\"><i data-lucide=\"message-circle-more\"></i> <span class=\"waline-comment-count\" data-path=\"' + path + '\">0</span></span> ';\n            pageMetaHTML += '<span title=\"阅读量\"><i data-lucide=\"eye\"></i> <span class=\"waline-pageview-count\" data-path=\"' + path + '\">1</span></span> ';\n            pageMetaHTML += '<span id=\"qrcode\" title=\"手机查看\"><i data-lucide=\"qr-code\"></i><span id=\"qr-zoom\"><img src=\"https://api.qrserver.com/v1/create-qr-code/?size=150x150&data=' + encodeURIComponent(location.href) + '\" /><br /><font>手机查看</font></span></span>';\n            pageMeta.innerHTML = pageMetaHTML;\n            pageTitleElement.after(pageMeta);\n            lucide.createIcons();\n        }\n        try {\n            if(SHOW_PAGE_HEADER || SHOW_COMMENTS) {\n                init({\n                    el: '#waline',\n                    // 文章反应\n                    reaction: true,\n                    dark: false,\n                    copyright: false,\n                    // 浏览量统计\n                    pageview: true,\n                    // 评论数统计\n                    comment: true,\n                    path: path,\n                    serverURL: WALINE_SERVER_URL || '',\n                    locale: {\n                        reaction0: '点赞',\n                        reaction1: '踩一下',\n                        reaction2: '酷毙了',\n                        reaction3: '不屑',\n                        reaction4: '尴尬',\n                        reaction5: '无聊',\n                    },\n                });\n            }\n        } catch (e) {\n            console.log(e);\n        }\n        //创建scroll to top\n        if (SHOW_SCROLL_TO_TOP && !document.getElementById('scrollToTop')) {\n            const scrollToTop = document.createElement(\"div\");\n            scrollToTop.id = \"scrollToTop\";\n            scrollToTop.innerHTML = '<div id=\"scrollToTopBtn\"><i data-lucide=\"arrow-up-to-line\"></i></div>';\n            container.appendChild(scrollToTop);\n            lucide.createIcons();\n\n            var targetElement = document.querySelector(\".document-container>.markdown-preview-view\");\n            var scrollToTopBtn = document.getElementById('scrollToTopBtn');\n\n            // 监听滚动事件\n            targetElement.addEventListener('scroll', function () {\n                var scrollTop = targetElement.scrollTop;\n                var threshold = targetElement.clientHeight * 0.25; // 当滚动超过25%时显示按钮\n\n                if (scrollTop > threshold) {\n                    scrollToTopBtn.style.display = 'block'; // 显示回到顶部按钮\n                } else {\n                    scrollToTopBtn.style.display = 'none'; // 隐藏回到顶部按钮\n                }\n            });\n\n            // 为回到顶部按钮绑定点击事件\n            scrollToTopBtn.addEventListener('click', function () {\n                var targetElement = document.querySelector(\".document-container>.markdown-preview-view\");\n\n                if ('scrollBehavior' in document.documentElement.style) {\n                    targetElement.scrollTo({\n                        top: 0,\n                        behavior: 'smooth'\n                    });\n                } else {\n                    targetElement.scrollTop = 0;\n                }\n            });\n\n            onToggleCollapsedChangedToTop();\n            const rightCollapse = document.querySelector(\".sidebar-right .clickable-icon.sidebar-collapse-icon\")\n            rightCollapse.addEventListener('click', () => {\n                setTimeout(() => {\n                    onToggleCollapsedChangedToTop();\n                }, 42)\n            })\n        }\n        // 代码复制按钮\n        document.querySelectorAll(\".document-container>.markdown-preview-view>.markdown-preview-sizer pre\").forEach((pre) => {\n            pre.addEventListener('scroll', () => {\n                const copyCodeBtn = pre.querySelector('.copy-code-button');\n                const copyCodeBtnRect = copyCodeBtn.getBoundingClientRect();\n                copyCodeBtn.style.right = 'auto';\n                copyCodeBtn.style.left = (pre.scrollLeft + pre.offsetWidth - copyCodeBtnRect.width - 8) + 'px';\n            })\n        });\n\n        // 评论提交后执行\n        setTimeout(() => {\n            if(!SHOW_COMMENTS) return;\n            const countElement = document.querySelector('.wl-count');\n            // 创建一个观察器实例\n            const observer = new MutationObserver((mutations) => {\n                mutations.forEach((mutation) => {\n                    if (mutation.type === 'characterData' || mutation.type === 'childList') {\n                        if(mutation.target.firstChild){\n                            document.querySelector(\".waline-comment-count\").innerHTML = mutation.target.firstChild.textContent;\n                        }\n                    }\n                });\n            });\n            // 配置观察器选项\n            const config = { attributes: false, childList: true, subtree: true, characterData: true };\n            // 观察指定元素\n            observer.observe(countElement, config);\n        }, 100);\n\n    }\n</script>\n<script>\n    // 切换文章时执行\n    function onAsyncLoadedDocument(url, transferDocument) {\n        togglePrismTheme(localStorage.getItem(\"theme\") === 'dark' ? false : true);\n        // 图片显示兼容\n        setTimeout(() => {\n            loadSpecialImg();\n        }, 42);\n        // 初始化评论\n        initWaline(transferDocument);\n        // 生成版权信息\n        copyright()\n        // 图片放大\n        initImgZoom();\n        // 添加文件下载按钮\n        attachDownload();\n    }\n    // 动态切换样式 state ? \"light\" : \"dark\"\n    function toggleWalineTheme(state) {\n        if (state || document.body.classList.contains(\"waline-theme-dark\")) {\n            document.body.classList.remove(\"waline-theme-dark\")\n        } else {\n            document.body.classList.add(\"waline-theme-dark\")\n        }\n    }\n    // 切换主题样式时执行 state ? \"light\" : \"dark\"\n    function onThemeToggle(state) {\n        toggleWalineTheme(state)\n        togglePrismTheme(state);\n    }\n    // 侧边栏折叠时执行\n    function onSidebarCollapsed(collapsed, deviceSize, sidebar) {\n        const isLeftSidebar = sidebar.classList.contains(\"sidebar-left\");\n        const isFloatingSidebars = document.body.classList.contains(\"floating-sidebars\")\n\n        // 触发侧边栏时改变scroll to top位置\n        onToggleCollapsedChangedToTop();\n\n        //console.log(collapsed, deviceSize, isFloatingSidebars, 'sidebar');\n        if(isFloatingSidebars) {\n            const sidebarMask = document.querySelector(\"#sidebarMask\");\n            const treeArea = document.querySelector(\".sidebar-left .tree-scroll-area\");\n            const isPhone = isMobile();\n            if(collapsed) {\n                //折叠侧边栏\n                if(sidebarMask) sidebarMask.style.display = 'none';\n                if(isLeftSidebar && treeArea && isPhone) treeArea.style.display = 'none';\n            } else {\n                //展开侧边栏\n                if(sidebarMask) sidebarMask.style.display = 'block';\n                if(isLeftSidebar && treeArea && isPhone) {\n                    setTimeout(()=>{treeArea.style.display = 'block';}, 100);\n                }\n            }\n        }\n    }\n\n    // 侧边栏折叠时触发scroll to top\n    function onToggleCollapsedChangedToTop() {\n        if(typeof scrollToTopBtn !== 'undefined'){\n            const sidebarRight = document.querySelector(\".sidebar-right\")\n            if (sidebarRight.classList.contains('is-collapsed')) {\n                scrollToTopBtn.classList.add('st-collapsed')\n            } else {\n                scrollToTopBtn.classList.remove('st-collapsed')\n            }\n        }\n    }\n\n    function copyright() {\n        const year = new Date().getFullYear();\n        const author = AUTHOR || document.querySelector('meta[name=\"author\"]')?.getAttribute(\"content\") || VAULT_TITLE;\n        let copytext = '© ' + year + ' '+ author + ' <font color=\"#ee802f\">♡</font> 由obsidian强力驱动'\n        if(SHOW_RSS_FEED) copytext += '&nbsp;<a href=\"lib/rss.xml\"><img src=\"https://s21.ax1x.com/2024/04/21/pkpNoSf.png\" />RSS</a>';\n        const container = document.querySelector(\".markdown-preview-sizer\")\n        const copyright = document.createElement(\"div\");\n        copyright.id = \"copyright\";\n        if(!SHOW_PAGE_FOOTER) copyright.style.display = 'none';\n        copyright.innerHTML = copytext;\n        container.appendChild(copyright);\n    }\n    function timestampToTimeString(timestamp) {\n        timestamp = timestamp ? timestamp : null;\n        //时间戳为10位需*1000，时间戳为13位的话不需乘1000\n        let date = new Date(timestamp);\n        let Y = date.getFullYear() + '-';\n        let M = (date.getMonth() + 1 < 10 ? '0' + (date.getMonth() + 1) : date.getMonth() + 1) + '-';\n        let D = (date.getDate() < 10 ? '0' + date.getDate() : date.getDate()) + ' ';\n        return Y + M + D;\n    }\n    // state ? \"light\" : \"dark\"\n    function togglePrismTheme(state) {\n        const themeTail = state ? \"\" : \"-dark\";\n        const currLink = document.getElementById(\"prism-theme\");\n        const linkHref = 'https://unpkg.com/prismjs@1.29.0/themes/prism' + themeTail + '.min.css';\n        if (currLink && currLink.href === linkHref) return;\n        const link = document.createElement('link');\n        link.id = 'prism-theme';\n        link.rel = 'stylesheet';\n        link.href = linkHref;\n        link.onload = () => { if (currLink) currLink.remove(); }\n        document.head.appendChild(link);\n    }\n    togglePrismTheme(localStorage.getItem(\"theme\") === 'dark' ? false : true);\n    function onDomReady(fn) {\n        if (document.readyState !== 'loading') {\n            fn();\n        } else {\n            document.addEventListener('DOMContentLoaded', fn);\n        }\n    }\n    function isMobileMedia(maxWidth=768) {\n        return window.matchMedia(\"(max-width: \"+maxWidth+\"px)\").matches;\n    }\n    //初始化图片放大\n    function initImgZoom() {\n        ImgZoom(\".document-container>.markdown-preview-view>.markdown-preview-sizer > div:not(.page-meta,.mod-footer,#waline,#scrollToTop,#copyright) img\");\n    }\n    // 搜索时执行\n    function onSearch() {\n        const searchInput = document.querySelector(\".sidebar-left input[type=search]\");\n        searchInput.addEventListener(\"input\", (e) => {\n            setTimeout(()=>setTreeCount(), 42);\n        });\n    }\n    // 获取目录树文章数\n    function setTreeCount() {\n        // 获取总数\n        const total = document.querySelector(\".sidebar-left .file-tree\").querySelectorAll(\".nav-file:not(.filtered-out)\").length;\n        if(!document.querySelector(\"#total-files\")){\n            const treeHeader = document.querySelector(\".tree-container .tree-header\")\n            const totalSpan = document.createElement(\"span\");\n            totalSpan.id = \"total-files\";\n            totalSpan.innerHTML = total;\n            treeHeader.appendChild(totalSpan);\n        } else {\n            document.querySelector(\"#total-files\").innerHTML = total;\n        }\n\n        // 获取每个目录的文章数\n        const allFolders = document.querySelectorAll(\".sidebar-left .file-tree .nav-folder:not(.filtered-out) .tree-link .nav-folder-title\");\n        allFolders.forEach(folder => {\n            const fileCount = folder.parentElement.nextElementSibling.querySelectorAll(\".nav-file:not(.filtered-out)\").length;\n            folder.dataset.count = fileCount;\n        });\n    }\n    // 文件树尺寸变化时执行\n    function observeTreeAreaResize() {\n        // 监听出现滚动条\n        const elementToObserve = document.querySelector('.webpage-container .tree-container .tree-scroll-area');\n        const resizeObserver = new ResizeObserver(()=>{\n            document.querySelector(\"#total-files\").style.right = (elementToObserve.offsetWidth - elementToObserve.clientWidth + 12) + 'px';\n        });\n        resizeObserver.observe(elementToObserve);\n    }\n    // 当全文检索开始建立索引时执行\n    function onSearchIndexing() {\n        const searchInput = document.querySelector(\".sidebar-left input[type=search]\");\n        searchInput.placeholder = LANG === 'zh-cn' ? '正在建立全文索引...' : 'Full-text indexing...';\n    }\n    // 当全文检索准备好后执行\n    function onSearchReady() {\n        const searchInput = document.querySelector(\".sidebar-left input[type=search]\");\n        searchInput.placeholder='Search...';\n    }\n    // 图片显示兼容\n    function loadSpecialImg() {\n        document.querySelectorAll(\"img[src*='+']\").forEach(item => {\n            item.setAttribute('src', URLencode(item.getAttribute('src')));\n        });\n    }\n    // 添加附件下载按钮\n    function attachDownload() {\n        setTimeout(() => {\n            document.querySelectorAll(`.internal-embed.file-embed`).forEach((item)=>{\n                item.onclick=()=>{\n                    window.open(item.getAttribute('src'));\n                }\n            });\n        }, 42);\n    }\n    // 当滚动完成时执行\n    function onScrollIntoViewStart(element, options, animate) {\n        // 解决手机出现横向滚动条问题\n        setTimeout(()=>{\n            const pageView = document.querySelector(\".document-container>.markdown-preview-view\");\n            if(pageView.scrollLeft > 0) pageView.scrollTo(0, pageView.scrollTop);\n        }, 1500)\n    }\n    // 文章加载完成后执行\n    onDomReady(() => {\n\n        // 将index.html的标题改为首页\n        let elapsedTime = 0;\n        const waitForIndexTitle = (delay = 50) => {\n            const indexTitle = document.querySelector(\n                \".mod-tree-file .tree-link[href='index.html'] .tree-item-title\"\n            );\n            if (elapsedTime > 60000) {\n                return;\n            }\n            if (indexTitle && indexTitle.innerHTML === 'index') {\n                indexTitle.innerHTML = '首页';\n\n                // 图片显示兼容\n                loadSpecialImg();\n\n                return;\n            }\n            elapsedTime += delay;\n            setTimeout(() => {\n                waitForIndexTitle(delay);\n            }, delay);\n        };\n\n        // 修改首页标题\n        if (LANG === 'zh-cn') waitForIndexTitle();\n        // 初始化评论\n        initWaline();\n        // 触发评论样式切换\n        toggleWalineTheme(localStorage.getItem(\"theme\") === 'dark' ? false : true);\n        // 生成版权信息\n        copyright()\n\n       // dom ready时显示内容\n       document.querySelector(\".document-container\").classList.remove('hide');\n      // 自动展开当前文档的树形菜单\n      const navTimer = setInterval(()=>{\n        const activeNavItem = document.querySelector(\".nav-file.mod-active\");\n        if(activeNavItem && activeNavItem.parentElement) {\n          if(navTimer) clearInterval(navTimer);\n          //if(activeNavItem.parentElement.style.display === 'none'){\n          //  setTimeout(() => {\n          //    activeNavItem.parentElement.previousElementSibling.click();\n          //  }, 42);\n          //}\n          setTimeout(()=>{\n            // 兼容不支持translate的浏览器\n            setTimeout(()=> {\n                const collapseIcons = document.querySelectorAll(\".tree-container .collapse-icon\");\n                if(collapseIcons.length >0 && collapseIcons[0].style.translate  === undefined){\n                    collapseIcons.forEach(item=>{item.style.left=0})\n                }\n            }, 50);\n\n            if (SHOW_FILE_NUMBER) {\n                // 计算数目录文件数\n                setTreeCount();\n                // 文件树尺寸变化时执行\n                observeTreeAreaResize();\n                // 搜索时执行\n                onSearch();\n            }\n\n            // 支持file color插件 (也可通过生成css文件实现)\n            if (FILE_COLORS && USE_FILE_COLOR_PLUGIN && Object.getOwnPropertyNames(FILE_COLORS).length) {\n                for(const key in FILE_COLORS) {\n                    const link = document.querySelector(\".sidebar-left .tree-link[data-path='\"+key+\"'] .tree-item-title\");\n                    if(link) link.style.color = FILE_COLORS[key];\n                }\n            }\n\n            // 添加文件下载按钮\n            attachDownload();\n\n          }, 42);\n        }\n      }, 50);\n\n      // 创建小屏侧边栏展开遮罩层，防止误触其他元素\n      const sidebarMask = document.createElement(\"div\");\n      sidebarMask.id = \"sidebarMask\";\n      sidebarMask.style = \"position:fixed;top:0;left:0;opacity:0;z-index:9;width:100%;height:100%;display:none;\";\n      sidebarMask.onclick = function() {this.style.display = 'none';}\n      document.body.appendChild(sidebarMask);\n\n      // 图片放大缩小\n      initImgZoom();\n\n      //搜索事件\n      document.querySelector(\".webpage-container input[type=search]\").addEventListener(\"input\", (e) => {\n        if(!searchReady){\n            if(EasyNotice) EasyNotice.createNotice(LANG === 'zh-cn' ? '正在建立全文索引，请稍后重试...' : 'Full-text indexing, please try again later.', 1500, 'left:12px;top:12px;', true, false);\n        }\n      });\n\n    });\n</script>",
  "defaultTheme": "light",
  "isDefaultLightTheme": true,
  "showComments": true,
  "showPageHeader": true,
  "showPageFooter": true,
  "showRSSFeed": false,
  "showScrollToTop": false,
  "walineServerURL": "",
  "statisticalCodes": "",
  "showFileNumber": true,
  "useBartenderPlugin": true,
  "useFileColorPlugin": true
}